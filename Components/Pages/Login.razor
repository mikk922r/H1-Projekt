@page "/login"
@rendermode InteractiveServer
@using System.ComponentModel.DataAnnotations
@inject DBService DB
@inject CurrentUserService Auth
@inject NavigationManager Nav

<EditForm Model="loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label">Email</label>
        <InputText class="form-control" @bind-Value="loginModel.Email" />
        <ValidationMessage For="@(() => loginModel.Email)" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@if (!string.IsNullOrEmpty(error))
{
    <div class="alert alert-danger mt-2">@error</div>
}

@code {
    private LoginModel loginModel = new();
    private string? error;

    private async Task HandleLogin()
    {
        var user = await DB.GetUserByEmailAsync(loginModel.Email);
        if (user == null)
        {
            error = "No user found with that email.";
            return;
        }

        Auth.SignIn(user);
        Nav.NavigateTo("/");
    }

    private class LoginModel
    {
        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Must be a valid email")]
        public string Email { get; set; } = string.Empty;
    }
}