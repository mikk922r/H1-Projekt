@page "/register"
@rendermode InteractiveServer
@inherits BasePage

@inject DBService DB
@inject NavigationManager Nav

<PageTitle>Registrer</PageTitle>

<EditForm class="card shadow-sm mx-auto w-fit" Model="registerForm" OnValidSubmit="HandleRegister" FormName="Register">
    <DataAnnotationsValidator />

    <article class="form d-flex flex-column gap-3 p-3">
        <h1 class="fs-3 text-center fw-semibold">Registrer</h1>

        <div>
            <label class="form-label">Navn</label>

            <InputText class="form-control" placeholder="Navn..." @bind-Value="registerForm.Name" />

            <ValidationMessage For="@(() => registerForm.Name)" />
        </div>

        <div>
            <label class="form-label">Email</label>

            <InputText class="form-control" type="email" placeholder="Email..." @bind-Value="registerForm.Email" />

            <ValidationMessage For="@(() => registerForm.Email)" />
        </div>

        <div>
            <label class="form-label">Adgangskode</label>

            <InputText class="form-control" type="password" placeholder="Adgangskode..." @bind-Value="registerForm.Password" />

            <ValidationMessage For="@(() => registerForm.Password)" />
        </div>

        <div>
            <label class="form-label">Telefonnummer</label>

            <div class="input-group flex-nowrap d-flex">
                <span class="input-group-text">+</span>

                <InputNumber class="form-control rounded-0 w-1 text-center" type="text" placeholder="45" @bind-Value="registerForm.PhoneCode" />

                <InputText class="form-control rounded-start-0 w-75" placeholder="12345678" @bind-Value="registerForm.PhoneNumber" />
            </div>

            <ValidationMessage For="@(() => registerForm.PhoneCode)" />
            <ValidationMessage For="@(() => registerForm.PhoneNumber)" />
        </div>

        <div class="d-flex gap-3">
            <button type="submit" class="btn btn-primary w-50">Registrer</button>

            <NavLink href="/login" class="btn btn-outline-secondary w-50">Login</NavLink>
        </div>

        @if (!string.IsNullOrEmpty(error))
        {
            <p class="alert alert-danger mb-0 p-2">@error</p>
        }
    </article>
</EditForm>

@code {
    private RegisterFormModel registerForm = new RegisterFormModel();

    private string error = string.Empty;

    private async Task HandleRegister()
    {
        User? user = await Auth.Register(registerForm);

        if (user is null)
        {
            error = "Der skete en fejl under registreringen. Prøv venligst igen.";

            return;
        }

        Nav.NavigateTo("/login");
    }
}