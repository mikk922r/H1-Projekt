@page "/"
@rendermode InteractiveServer
@inherits BasePage

@inject DBService DBService
@inject NavigationManager Nav
@inject OrderService OrderService

<PageTitle>Forside</PageTitle>

<div class="container my-4">
    <div class="row justify-content-center">
        @if (!Auth.IsAuthenticated)
        {
            <div class="col-12 col-md-6 col-lg-4 text-center">
                <img src="/uploads/front.jpg"
                     alt="Forside banner"
                     class="img-fluid rounded mb-4"
                     style="max-height: 200px; object-fit: cover;" />

                <div class="card border-warning">
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">Velkommen!</h5>
                        <p class="card-text flex-grow-1">Du skal logge ind før du kan tilføje / købe produkter.</p>
                        <NavLink class="btn btn-primary mt-2" href="/login">Login</NavLink>
                        <NavLink class="btn btn-outline-secondary mt-2" href="/register">Register</NavLink>
                    </div>
                </div>
            </div>
        }
    </div>

    @if (Auth.IsAuthenticated)
    {
        <div class="row g-4 justify-content-center">
            <div class="col-md-4">
                <div class="card h-100">
                    <div class="card-body d-flex flex-column">
                        <p class="card-text flex-grow-1 mb-2">Få solgt dit produkt lige her!</p>

                        <NavLink class="btn btn-success mt-auto" href="/add-product">Tilføj Produkt</NavLink>
                    </div>
                </div>
            </div>
        </div>
    }

    <h1 class="fs-2 my-4 text-center">Nyeste Produkter</h1>

    @if (!products.Any())
    {
        <p class="m-auto fs-3 fw-semibold text-center">Kunne ikke finde nogle produkter...</p>
    }
    else
    {
        <div class="d-flex flex-wrap justify-content-center gap-4">
            @foreach (Product product in products.OrderByDescending(p => p.Id))
            {
                <ProductCard product="product" />
            }
        </div>
    }
</div>

@code {
    private List<Product> products = new List<Product>();

    protected override async Task OnInitializedAsync()
    {
        products = await DBService.GetAllProductsAsync();
    }
}
