@page "/"
@rendermode InteractiveServer
@using Projekt.Models
@inject DBService DBService
@inject CurrentUserService Auth
@inject NavigationManager Nav

<div class="row mb-4 align-items-center">
    <div class="col">
        <h2>Dashboard</h2>
    </div>
    <div class="col-auto">
        <span class="badge fs-6 @(isConnected ? "bg-success" : "bg-danger")">
            @(isConnected ? "🟢 Connected" : "🔴 Not Connected")
        </span>
    </div>
</div>

<div class="row g-4">
    @if (Auth.IsAuthenticated)
    {
        <!-- Users card -->
        <div class="col-md-4">
            <div class="card h-100">
                <div class="card-body d-flex flex-column">
                    <h5 class="card-title">Users</h5>
                    <p class="card-text flex-grow-1">View and manage registered users.</p>
                    <button type="button"
                            class="btn btn-primary mt-auto"
                            @onclick="GetUsers">
                        Load Users
                    </button>
                </div>
            </div>
        </div>

        <!-- Add Product card -->
        <div class="col-md-4">
            <div class="card h-100">
                <div class="card-body d-flex flex-column">
                    <h5 class="card-title">Products</h5>
                    <p class="card-text flex-grow-1">Add a new product to the marketplace.</p>
                    <NavLink class="btn btn-success mt-auto" href="/add-product">
                        Add Product
                    </NavLink>
                </div>
            </div>
        </div>
    }
    else
    {
        <!-- Prompt to login/register -->
        <div class="col-md-4">
            <div class="card h-100 border-warning">
                <div class="card-body d-flex flex-column">
                    <h5 class="card-title">Welcome!</h5>
                    <p class="card-text flex-grow-1">
                        You need to be signed in to manage users or add products.
                    </p>
                    <NavLink class="btn btn-primary mt-auto" href="/login">Login</NavLink>
                    <NavLink class="btn btn-outline-secondary mt-2" href="/register">Register</NavLink>
                </div>
            </div>
        </div>
    }
</div>

@if (Auth.IsAuthenticated)
{
    @if (users?.Any() == true)
    {
        <div class="table-responsive mt-4">
            <table class="table table-striped table-bordered">
                <thead class="table-light">
                    <tr><th>Name</th><th>Email</th><th>Phone</th></tr>
                </thead>
                <tbody>
                    @foreach (var u in users)
                    {
                        <tr>
                            <td>@u.Name</td>
                            <td>@u.Email</td>
                            <td>+@u.PhoneCode @u.PhoneNumber</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else if (users is not null)
    {
        <div class="alert alert-info text-center mt-4">
            No users found. Click “Load Users” above to fetch data.
        </div>
    }
}

@code {
    private List<Users>? users;
    private bool isConnected;

    protected override async Task OnInitializedAsync()
    {
        isConnected = await DBService.TestConnectionAsync();
    }

    private async Task GetUsers()
    {
        users = await DBService.GetAllUsersAsync();
    }
}
