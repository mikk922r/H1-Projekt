@page "/"
@using Projekt.Models
@inject Projekt.Services.DBService DBService
@rendermode InteractiveServer

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <span class="badge fs-6 @(isConnected ? "bg-success" : "bg-danger")">
            @(isConnected ? "🟢 Connected" : "🔴 Not Connected")
        </span>
    </div>

    <div class="mb-3">
        <button class="btn btn-primary me-2" @onclick="GetUsers">Load Users</button>
        <!-- you can add more action buttons here -->
    </div>

    @if (users?.Any() == true)
    {
        <div class="table-responsive">
            <table class="table table-striped table-bordered">
                <thead class="table-light">
                    <tr>
                        <th scope="col">Name</th>
                        <th scope="col">Email</th>
                        <th scope="col">Phone</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var u in users)
                    {
                        <tr>
                            <td>@u.Name</td>
                            <td>@u.Email</td>
                            <td>+@u.PhoneCode @u.PhoneNumber</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="alert alert-info text-center">No users found. Click "Load Users" to fetch data.</div>
    }
</div>

@code {
    private List<Users> users = new();
    private bool isConnected;

    protected override async Task OnInitializedAsync()
    {
        isConnected = await DBService.TestConnectionAsync();
    }

    private async Task GetUsers()
    {
        users = await DBService.GetAllUsersAsync();
    }
}
