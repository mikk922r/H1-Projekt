@page "/"
@rendermode InteractiveServer
@inherits BasePage

@inject DBService DBService
@inject NavigationManager Nav
@inject OrderService OrderService

<PageTitle>Forside</PageTitle>

<h1 class="fs-1 my-4">Dashboard</h1>

<div class="row g-4">
    @if (Auth.IsAuthenticated)
    {
        <!-- Add Product card -->
        <div class="col-md-4">
            <div class="card h-100">
                <div class="card-body d-flex flex-column">
                    <h5 class="card-title">Products</h5>
                    <p class="card-text flex-grow-1">Add a new product to the marketplace.</p>
                    <NavLink class="btn btn-success mt-auto" href="/add-product">
                        Add Product
                    </NavLink>
                </div>
            </div>
        </div>
    }
    else
    {
        <!-- Prompt to login/register -->
        <div class="col-md-4">
            <div class="card h-100 border-warning">
                <div class="card-body d-flex flex-column">
                    <h5 class="card-title">Welcome!</h5>

                    <p class="card-text flex-grow-1">
                        You need to be signed in to manage users or add products.
                    </p>

                    <NavLink class="btn btn-primary mt-auto" href="/login">Login</NavLink>
                    <NavLink class="btn btn-outline-secondary mt-2" href="/register">Register</NavLink>
                </div>
            </div>
        </div>
    }
</div>

<h1 class="fs-1 my-4">Nyeste Produkter</h1>

@if (!products.Any())
{
    <p class="m-auto fs-3 fw-semibold">Kunne ikke finde nogle produkter...</p>
}
else
{
    <div class="d-flex flex-wrap gap-4">
        @foreach (Product product in products.OrderByDescending(p => p.Id))
        {
            <ProductCard product="product" />
        }
    </div>
}

@code {
    private List<Product> products = new List<Product>();

    protected override async Task OnInitializedAsync()
    {
        products = await DBService.GetAllProductsAsync();
    }
}
