@rendermode InteractiveServer

<div class="d-flex">
    @for (int i = 1; i <= 5; i++)
    {
        int position = i;

        bool selected = position <= (hoverRating ?? rating);

        <svg @onmouseover="() => HandleMouseOver(position)" @onmouseout="HandleMouseOut" @onclick="() => SetRating(position)" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" class="@(selected ? "text-warning" : "text-body-secondary opacity-50")" aria-hidden="true" role="img" width="16" height="16" viewBox="0 0 24 24">
            @if (selected)
            {
                <path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.525 2.295a.53.53 0 0 1 .95 0l2.31 4.679a2.12 2.12 0 0 0 1.595 1.16l5.166.756a.53.53 0 0 1 .294.904l-3.736 3.638a2.12 2.12 0 0 0-.611 1.878l.882 5.14a.53.53 0 0 1-.771.56l-4.618-2.428a2.12 2.12 0 0 0-1.973 0L6.396 21.01a.53.53 0 0 1-.77-.56l.881-5.139a2.12 2.12 0 0 0-.611-1.879L2.16 9.795a.53.53 0 0 1 .294-.906l5.165-.755a2.12 2.12 0 0 0 1.597-1.16z"></path>
            }
            else
            {
                <path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.525 2.295a.53.53 0 0 1 .95 0l2.31 4.679a2.12 2.12 0 0 0 1.595 1.16l5.166.756a.53.53 0 0 1 .294.904l-3.736 3.638a2.12 2.12 0 0 0-.611 1.878l.882 5.14a.53.53 0 0 1-.771.56l-4.618-2.428a2.12 2.12 0 0 0-1.973 0L6.396 21.01a.53.53 0 0 1-.77-.56l.881-5.139a2.12 2.12 0 0 0-.611-1.879L2.16 9.795a.53.53 0 0 1 .294-.906l5.165-.755a2.12 2.12 0 0 0 1.597-1.16z"></path>
            }
        </svg>
    }

    @if (!readOnly && showReset && rating is not null)
    {
        <svg role="button" @onclick="Reset" xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
            <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708" />
        </svg>
    }
</div>

@code {
    [Parameter]
    public int? rating { get; set; }

    [Parameter]
    public EventCallback<int?> ratingChanged { get; set; }

    [Parameter]
    public bool showReset { get; set; } = true;

    [Parameter]
    public bool readOnly { get; set; } = false;

    private int? hoverRating;

    private void SetRating(int value)
    {
        if (readOnly)
        {
            return;
        }

        rating = value;

        ratingChanged.InvokeAsync(value);

        hoverRating = null;
    }

    private void HandleMouseOver(int value)
    {
        if (readOnly)
        {
            return;
        }

        hoverRating = value;
    }

    private void HandleMouseOut()
    {
        if (readOnly)
        {
            return;
        }

        hoverRating = null;
    }

    private void Reset()
    {
        rating = null;

        ratingChanged.InvokeAsync(rating);

        hoverRating = null;
    }
}