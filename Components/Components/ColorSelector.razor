@inject DBService DBService

<div class="d-flex flex-wrap gap-2 px-1">
    @foreach (Colors color in ColorHelper.GetColors())
    {
        <button type="button" class="btn color @(ColorHelper.GetColorClass(color) + (IsSelected(color) ? " active" : "")) rounded-circle w-2rem h-2rem border border-1 border-default" @onclick="() => ToggleColor(color)"></button>
    }
</div>

@code {
    [Parameter]
    public List<Colors> colors { get; set; } = new List<Colors>();

    [Parameter]
    public EventCallback<List<Colors>> colorsChanged { get; set; }

    [Parameter]
    public Colors color { get; set; }

    [Parameter]
    public EventCallback<Colors> colorChanged { get; set; }

    private void ToggleColor(Colors value)
    {
        if (colorChanged.HasDelegate)
        {
            color = value;

            colorChanged.InvokeAsync(color);
        }
        else
        {
            if (colors.Contains(value))
            {
                colors.Remove(value);
            }
            else
            {
                colors.Add(value);
            }

            colorsChanged.InvokeAsync(colors);
        }
    }

    public bool IsSelected(Colors value) => colors.Contains(value) || color == value;
}
