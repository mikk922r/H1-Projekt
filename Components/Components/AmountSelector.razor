<div class="d-flex align-items-center">
    <button type="button" class="d-flex justify-content-center align-items-center rounded-start-2 text-black fs-7 min-w-2rem min-h-2rem w-2rem h-2rem border border-1 border-default border-end-0" @onclick="Decrement">
        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" width="16" height="16" viewBox="0 0 24 24">
            <path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h14"></path>
        </svg>
    </button>

    <span class="d-flex justify-content-center align-items-center min-w-2rem min-h-2rem h-2rem border-top border-bottom border-1 border-default">@amount</span>

    <button type="button" class="d-flex justify-content-center align-items-center rounded-end-2 text-black fs-7 min-w-2rem min-h-2rem w-2rem h-2rem border border-1 border-default border-start-0" @onclick="Increment">
        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" width="16" height="16" viewBox="0 0 24 24">
            <path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h14m-7-7v14"></path>
        </svg>
    </button>
</div>

@code {
    [Parameter]
    public int amount { get; set; } = 1;

    [Parameter]
    public EventCallback<int> amountChanged { get; set; }

    private void Increment()
    {
        amount = Math.Min(100, amount + 1);

        amountChanged.InvokeAsync(amount);
    }

    private void Decrement()
    {
        amount = Math.Max(1, amount - 1);

        amountChanged.InvokeAsync(amount);
    }
}
